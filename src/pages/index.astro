---
import PageLayout from "@layouts/PageLayout.astro";
import { SITE } from "@consts";
import TwinklingStars from "@components/TwinklingStars.astro";
import MeteorShower from "@components/MeteorShower.astro";
---

<PageLayout title="Home" description={SITE.DESCRIPTION}>
  <!-- Light Mode: Particles -->
  <div class="absolute inset-0 block dark:hidden">
    <div id="particles1" class="fixed inset-0"></div>
    <div id="particles2" class="fixed inset-0"></div>
    <div id="particles3" class="fixed inset-0"></div>
  </div>

  <!-- Dark Theme: Stars -->
  <div class="absolute inset-0 bg-black hidden dark:block">
    <div id="stars1" class="fixed inset-0"></div>
    <div id="stars2" class="fixed inset-0"></div>
    <div id="stars3" class="fixed inset-0"></div>
  </div>

  <!-- Dark Theme: Twinkling Stars / Metors -->
  <div id="galaxy" class="fixed inset-0">
    <div class="hidden dark:block">
      <TwinklingStars />
      <MeteorShower />
    </div>
  </div>

  <script is:inline src="/js/bg.js"></script>

  <!-- HERO -->
  <section class="relative h-screen w-full">
    <div
      id="planetcont"
      class="animate absolute inset-0 top-1/4 overflow-hidden"
    >
      <div
        id="crescent"
        class="absolute top-0 left-1/2 -translate-x-1/2 w-[250vw] min-h-[100vh] aspect-square rounded-full p-[1px] bg-gradient-to-b from-black/25 dark:from-white/75 from-0% to-transparent to-5%"
      >
        <div
          id="planet"
          class="w-full h-full bg-white dark:bg-black rounded-full p-[1px] overflow-hidden flex justify-center"
        >
          <div
            id="blur"
            class="w-full h-20 rounded-full bg-neutral-900/25 dark:bg-white/25 blur-3xl"
          >
          </div>
        </div>
      </div>
    </div>
    <div
      class="animate absolute h-full w-full flex items-center justify-center"
    >
      <div class="relative w-full h-full flex items-center justify-center">
        <div class="p-5 text-center">
          <p
            class="animated text-lg md:text-xl lg:text-2xl font-semibold opacity-75"
          >
            Hello, I am ...
          </p>
          <p
            class="animated text-2xl md:text-3xl lg:text-4xl font-bold uppercase text-black dark:text-white"
          >
            Flango
          </p>
          <p class="animated text-sm md:text-base lg:text-lg opacity-75">
            A Domain Driven Monolith Project built on top of <a
              href="https://www.djangoproject.com"
              target="_blank">Django</a
            >.
          </p>
          <div
            id="ctaButtons"
            class="animated flex flex-wrap gap-4 justify-center mt-5"
          >
            <a
              href="/work"
              class="py-2 px-4 truncate rounded text-xs md:text-sm lg:text-base border border-black/25 dark:border-white/25 hover:bg-black/5 hover:dark:bg-white/15 blend"
            >
              Read Changelog
            </a>
            <a
              href="/blog"
              class="py-2 px-4 rounded truncate text-xs md:text-sm lg:text-base bg-black dark:bg-white text-white dark:text-black hover:opacity-75 blend"
            >
              Read News and Meta
            </a>
            <a
              href="/projects"
              class="py-2 px-4 truncate rounded text-xs md:text-sm lg:text-base border border-black/25 dark:border-white/25 hover:bg-black/5 hover:dark:bg-white/15 blend"
            >
              Projects
            </a>
          </div>
        </div>
      </div>
    </div>
  </section>

  <div class="relative bg-white dark:bg-black">
    <div class="mx-auto max-w-screen-sm p-5 space-y-24 pb-16">
      <!-- About Section -->
      <section class="animate">
        <article>
          <p>
            <b>Flango</b> helps solopreneurs and small teams to built web applications
            as a <a
              href="https://signalvnoise.com/svn3/the-majestic-monolith/"
              target="_blank">majestic monolith</a
            > using domain driven design patterns lightning fast.
          </p>
          <p>
            To enable this primary goal of the Flango project I've defined some
            initial aims and no aims. Those will help you to decide if it's
            worth to look further into this project or not.
          </p>
          <p class="font-semibold text-black dark:text-white">Aims</p>
          <ul>
            <li>
              Enable as short as possible request reponse latency. The project
              favours Django and Python packages wrapping <a
                href="https://www.rust-lang.org"
                target="_blank">Rust</a
              > code (e.g. <a
                href="https://github.com/emmett-framework/granian"
                target="_blank">granian</a
              >, <a href="https://github.com/pydantic/pydantic" target="_blank"
                >pydantic</a
              >).
            </li>
            <li>
              Enable as enjoyable as possible development experience. The
              project favours tooling implemented in Rust (e.g. <a
                href="https://github.com/astral-sh/uv"
                target="_blank">uv</a
              >, <a href="https://github.com/astral-sh/ruff" target="_blank"
                >ruff</a
              >).
            </li>
            <li>
              Enable lightning fast backend/frontend integration. The project
              favours API-less backend/frontend integration. Initially this will
              mean <a
                href="https://docs.djangoproject.com/en/5.0/ref/templates/language/"
                target="_blank">Django HTML templating</a
              > + <a href="https://htmx.org" target="_blank">HTMX</a>. Later you
              might find example code for <i
                >JavaScript frontend the monolith way</i
              >
              (e.g. using <a href="https://inertiajs.com" target="_blank"
                >inertia</a
              > and
              <a
                href="https://github.com/inertiajs/inertia-django"
                target="_blank">inertia-django</a
              >).
            </li>
            <li>
              Enable easy (low overhead) and robust ("exactly once") domain
              event and domain command message transmissions (asynchronous,
              distributed messaging) between bounded contexts (Django apps).
              Initially reasonable dependencies seem to be <a
                href="https://github.com/procrastinate-org/procrastinate"
                target="_blank">procrastinate</a
              >
              or
              <a
                href="https://github.com/PaulGilmartin/django-pgpubsub"
                target="_blank">django-pgpubsub</a
              >.
            </li>
            <li>
              Enable setting up remote procedure call (REST) integration APIs
              for third party systems in no time the project uses <a
                href="https://github.com/vitalik/django-ninja"
                target="_blank">django-ninja</a
              >.
            </li>
            <li>
              Enable setting up bi-directional streaming integration APIs for
              third party systems... not sure yet. WebSockets? Feel free to
              propose an idea :)
            </li>
            <li>
              Provide guides (explanation + example code) in a <a
                href="https://en.wikipedia.org/wiki/Pattern_language"
                target="_blank">pattern language</a
              > kind of style. The pattern language is contained in a GitHub repo
              and references GitHub repositories with example implemenations of patterns.
            </li>
            <li>
              Provide GitHub repository templates if code generalization is
              possible and reasonable.
            </li>
          </ul>
          <p class="font-semibold text-black dark:text-white">
            No Aims (right now)
          </p>
          <ul>
            <li>
              This project will not provide project skaffolding like provided by
              <a href="https://start.spring.io" target="_blank">initializr</a> for
              <a href="https://spring.io" target="_blank">Spring</a>,
              <a
                href="https://jetstream.laravel.com/introduction.html"
                target="_blank">Jetstream</a
              > for <a href="https://laravel.com">Laravel</a>, ... . In the
              context of domain driven design the ways how patterns can be
              implemented in terms of design and implementation is massive.
              Forcing designs and implementations kills developer learning and
              creativity. Providing inspiration boosts learning and creativity.
              This project is a part time project anyways.
            </li>
            <li>
              This project will care about async Django/python carefully. async
              is considered to <a
                href="https://www.encode.io/articles/python-async-frameworks-beyond-developer-tribalism"
                target="_blank">enable functionality</a
              > depending on it (bi-directional real-time server/client communication
              -> websockets, one-directional real-time server/client communication
              -> server sent, ...) for sure. async is considered carefully when it
              comes to "performance"... w.r.t. # of concurrent requests handled as
              well as request response latency. The async Python ecosystem is not
              perfect. The support of Django and it's ecosystem w.r.t. async features
              is limited. Increasing the # of concurrent requests handled can be
              solved using vertical and horizontal scaling way more easily. async
              is more complex than sync is. Developing applications in an sync way
              is faster. If the application works in a sync way and has "performance"
              issues one can still make it async later on.
            </li>
            <li>
              Project completed. This project will never be finished. The Python
              package ecosystem is continuously improving. Some of the pattern
              example implementations will be replace by "better" ones over
              time.
            </li>
            <li>
              This project will not become a full-time project or a company.
            </li>
          </ul>
          <p class="font-semibold text-black dark:text-white">Inspiration</p>
          <ul>
            <li>
              <a href="https://www.phoenixframework.org"
                >Phoenix Framework (Elixier)</a
              >: API-less frontends using HEEx (HTML + Embedded Elixir)
              templating.
            </li>
            <li>
              <a
                href="https://guides.rubyonrails.org/index.html"
                target="_blank">Rails (Ruby)</a
              >: API-less frontends using HTML templating.
            </li>
            <li>
              <a href="https://laravel-livewire.com">Laravel Livewire (PHP)</a>:
              API-less, dynamic frontends.
            </li>
            <li>
              <a href="https://github.com/MoonZoon/MoonZoon" target="_blank"
                >MoonZoon (Rust)</a
              >: API and JS-less Rust only frontends.
            </li>
            <li>
              <a href="" target="">Rocket</a>: API-less frontends using
              <a href="https://github.com/Keats/tera" target="_blank">Tera</a>
              (based on Jinja2/Django templating) or <a
                href="https://github.com/sunng87/handlebars-rust"
                target="_blank">Handlebars</a
              >
              HTML templating.
            </li>
          </ul>
        </article>
      </section>
      <!-- Support Section -->
      <section class="animate">
        <article>
          <p class="font-semibold text-black dark:text-white">Support us:</p>
          <p>
            <a href="https://polar.sh/flango-dev/subscriptions"
              ><picture
                ><source
                  media="(prefers-color-scheme: dark)"
                  srcset="https://polar.sh/embed/tiers.svg?org=flango-dev&darkmode"
                /><img
                  alt="Subscription Tiers on Polar"
                  src="https://polar.sh/embed/tiers.svg?org=flango-dev"
                /></picture
              ></a
            >
          </p>
        </article>
      </section>
    </div>
  </div>
</PageLayout>
